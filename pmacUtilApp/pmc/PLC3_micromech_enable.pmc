CLOSE

;#################################################
; PLC for writing the digital outputs of an ACC11E card.
; Original Author: James O'Hea
; Used variables: P300, (P301..P332 reserved for CS mres)
; This PLC assumes a standard micromech setup, i.e. digital outputs 0-15 and
; 24-39 correspond to amplifiers 1-32 enable signals. These outputs will be
; synced to the amplifier enable bits of the corresponding axes. Unused outputs
; may be used by writing to m77xx which are mapped to a mirror word. PLC3 will 
; then write the correct amplifier status to this mirror word, and copy it to
; m7501 and m7503
;#################################################

; used for storing current axis number
#define axis_number           P300

; axis enabled
#define axis_enabled          I(axis_number * 100)

; amplifier enabled bit Mxx39
#define amplifier_enabled     M(axis_number*100 + 39)

; These are for checking the status of the micromech amps (PMAC UMAC systems)
#define amplifier_demand      M(7699 + axis_number + (axis_number - 1) & 16 / 16 * 8)

#define micromech_protection     P(axis_number + 400) & 4 = 4
#define protection_tripped       P(axis_number + 464)


OPEN PLC3
CLEAR

; Calculate axis statuses
axis_number = 1
WHILE (axis_number !> 32)
	IF (micromech_protection and protection_tripped = 1)
		; If Encoder loss has tripped because of an amp fault, force it on
		amplifier_demand = 1
	ELSE
		; Otherwise do what the PMAC wants
		amplifier_demand = amplifier_enabled & axis_enabled
	ENDIF
	axis_number = axis_number + 1
ENDW

;Copy the mirror words across
m7501=M4933
m7503=M4934

CLOSE

ENABLE PLC 3
